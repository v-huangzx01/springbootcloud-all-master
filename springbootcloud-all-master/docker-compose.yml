# 执行命令 docker stack deploy -c docker-compose.yml [tack名称]
# 如果镜像从私库上拉：docker stack deploy -c docker-compose.yml --with-registry-auth [tack名称]

version: '3'

services:

  zipkin-service:
    image: openzipkin/zipkin:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "9411:9411"
    networks:
      my-overlay-network:
        aliases:
          - zipkin-service
#    environment:
#        - "SPRING_PROFILES_ACTIVE=test"

  eureka-server:
    image: 172.16.10.192:5000/eureka-server:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
#      placement:
#        constraints: [node.role == worker]
    ports:
      - "8761:8761"
    networks:
      my-overlay-network:
        aliases:
          - eureka-server
    environment:
        - "SPRING_PROFILES_ACTIVE=test-peer1"

  service-user:
    image: 172.16.10.192:5000/service-user:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8763:8763"
    networks:
      my-overlay-network:
        aliases:
          - service-user
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  service-order:
    image: 172.16.10.192:5000/service-order:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8764:8764"
    networks:
      my-overlay-network:
        aliases:
          - service-order
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  client-order-ribbon:
    image: 172.16.10.192:5000/client-order-ribbon:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8766:8766"
    networks:
      my-overlay-network:
        aliases:
          - client-order-ribbon
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  client-feign:
    image: 172.16.10.192:5000/client-feign:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8765:8765"
    networks:
      my-overlay-network:
        aliases:
          - client-feign
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  client-gateway-zuul:
    image: 172.16.10.192:5000/client-gateway-zuul:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8771:8771"
    networks:
      my-overlay-network:
        aliases:
          - client-gateway-zuul
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  client-turbine-monitor:
    image: 172.16.10.192:5000/client-turbine-monitor:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "8767:8767"
    networks:
      my-overlay-network:
        aliases:
          - client-turbine-monitor
    environment:
        - "SPRING_PROFILES_ACTIVE=test"

  spring-boot-admin-server:
    image: 172.16.10.192:5000/spring-boot-admin-server:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "8773:8773"
    networks:
      my-overlay-network:
        aliases:
          - spring-boot-admin-server
    environment:
        - "SPRING_PROFILES_ACTIVE=test"



  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - my-overlay-network

networks:
  my-overlay-network:
    driver: overlay

